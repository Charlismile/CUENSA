@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand-lg bg-primary nav-menu" data-bs-theme="dark">
    <div class="container-fluid">
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" 
                data-bs-target="#navbarSupportedContent"
                aria-controls="navbarSupportedContent" aria-expanded="false" 
                aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse justify-content-between" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item px-2">
                    <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                        <i class="bi bi-house-door-fill"></i> Inicio
                    </NavLink>
                </li>
                <li class="nav-item px-2">
                    <NavLink class="nav-link" href="/reportes">
                        <i class="bi bi-building"></i> Instalaciones
                    </NavLink>
                </li>
                <li class="nav-item px-2">
                    <NavLink class="nav-link" href="/GastoIndex">
                        <i class="bi bi-currency-dollar"></i> Gastos
                    </NavLink>
                </li>
                <li class="nav-item px-2">
                    <NavLink class="nav-link" href="/Index">
                        <i class="bi bi-clipboard2-data"></i> Reportes
                    </NavLink>
                </li>
            </ul>

            <ul class="navbar-nav ms-auto">
                <li class="nav-item px-2">
                    <img src="favicon.png" alt="Logo" width="40" />
                </li>
            </ul>
        </div>
    </div>
</nav>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

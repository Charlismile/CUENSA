@* @using Microsoft.AspNetCore.Identity *@
@* @inherits LayoutComponentBase *@
@* @inject AuthenticationStateProvider AuthStateProvider *@
@* @inject NavigationManager Navigation *@
@* *@
@* @if (!_hasCheckedMustChange) *@
@* { *@
@*     <div class="d-flex justify-content-center align-items-center vh-100"> *@
@*         <div class="spinner-border" role="status"><span class="visually-hidden">Cargando...</span></div> *@
@*     </div> *@
@* } *@
@* else *@
@* { *@
@*     <div class="wrapper"> *@
@*         <aside id="sidebar" class="js-sidebar @(IsCollapsed ? "collapsed" : "")"> *@
@*             <!-- Content For Sidebar --> *@
@*             <div class="h-100"> *@
@*                 <div class="navbar bg-gob-blue sidebar-logo"> *@
@*                     <NavLink href="/dashboard" Match="NavLinkMatch.All" class="bg-white py-1 px-4 rounded active mx-auto"> *@
@*                         <img src="favicon.png" class="img-fluid" alt="Logo MINSA" *@
@*                              style="height: 33px">SDGSA *@
@*                     </NavLink> *@
@*                 </div> *@
@*                 <DashBoardMenu/> *@
@*             </div> *@
@*         </aside> *@
@*         <div class="main"> *@
@*             <nav class="navbar navbar-expand px-3 border-bottom bg-gob-blue"> *@
@*                 <button class="btn" id="sidebar-toggle" type="button" @onclick="ToggledClick"> *@
@*                     <img *@
@*                         src="images/hamburger-menu.png" *@
@*                         class="avatar img-fluid rounded text-white" *@
@*                         alt="" *@
@*                     /> *@
@*                 </button> *@
@*                 <div class="navbar-collapse navbar py-0"> *@
@*                     <ul class="navbar-nav"> *@
@*                         <li class="nav-item dropdown border rounded-pill btn btn-sm btn-light py-2 px-4"> *@
@*                             <a href="#" data-bs-toggle="dropdown" class="nav-icon pe-md-0"> *@
@*                                 <AuthorizeView> *@
@*                                     <Authorized> *@
@*                                         <i class="fa-solid fa-user me-1"></i> *@
@*                                         @context.User.Identity?.Name *@
@*                                         <i class="ms-1 fa-solid fa-caret-down"></i> *@
@*                                     </Authorized> *@
@*                                     <NotAuthorized> *@
@*                                         <i class="fa-solid fa-user me-1"></i> *@
@*                                         <strong class="mx-2">Usuario</strong> *@
@*                                         <i class="ms-1 fa-solid fa-caret-down"></i> *@
@*                                     </NotAuthorized> *@
@*                                 </AuthorizeView> *@
@*                             </a> *@
@*                             <div class="dropdown-menu dropdown-menu-end"> *@
@*                                 <form action="/account/customlogout" method="post"> *@
@*                                     <AntiforgeryToken/> *@
@*                                     <button type="submit" class="dropdown-item"> *@
@*                                         <i class="fa-solid fa-right-from-bracket text-danger"></i> Salir *@
@*                                     </button> *@
@*                                 </form> *@
@*                             </div> *@
@*                         </li> *@
@*                     </ul> *@
@*                 </div> *@
@*             </nav> *@
@*             <main class="content px-0 py-0"> *@
@*                 <div class="p-4"> *@
@*                     @if (IsDev) *@
@*                     { *@
@*                         <div class="alert alert-danger mx-5"> *@
@*                             <p>IsDev: @IsDev</p> *@
@*                             <p>@Connection</p> *@
@*                         </div> *@
@*                     } *@
@*                     @Body *@
@*                 </div> *@
@*             </main> *@
@*             <footer class="footer mt-auto py-3 bg-body-tertiary border-top"> *@
@*                 <div class="container-fluid"> *@
@*                     <div> *@
@*                         <a href="www.minsa.gob.pa" target="_blank"><img src="favicon.png" class="img-fluid" *@
@*                                                                         alt="Logo MINSA" style="height: 20px;">Ministerio de *@
@*                             Salud de Panamá, @(DateTime.Now.Year)</a> *@
@*                     </div> *@
@*                 </div> *@
@*             </footer> *@
@*         </div> *@
@*     </div> *@
@* } *@
@* *@
@* <Toasts class="p-3" Placement="ToastsPlacement.TopRight" Delay="5000" AutoHide="true"/> *@
@* <Preload LoadingText="Cargando..." /> *@
@* *@
@* @code { *@
@*     private bool IsDev { get; set; } *@
@*     private string Connection {get; set; } = ""; *@
@*     private bool IsCollapsed { get; set; } *@
@*     private bool _hasCheckedMustChange = false; *@
@*      *@
@*     protected override async Task OnInitializedAsync() *@
@*     { *@
@*         IsDev = DatabaseProviderService.GetEnvironment(); *@
@*         Connection = DatabaseProviderService.GetConnectionString(); *@
@*         var stored = await _LocalStorageServices.GetItem("IsCollapsed"); *@
@*         IsCollapsed = !string.IsNullOrEmpty(stored) && stored == "1"; *@
@*     } *@
@*      *@
@*     private async Task ToggledClick() *@
@*     { *@
@*     IsCollapsed = !IsCollapsed; *@
@*     await _LocalStorageServices.AddItem("IsCollapsed", IsCollapsed ? "1" : "0"); *@
@*     } *@
@*      *@
@*     protected override async Task OnParametersSetAsync() *@
@*     { *@
@*         if (!_hasCheckedMustChange) *@
@*         { *@
@*             if (Navigation.Uri.Contains("/change-password", StringComparison.OrdinalIgnoreCase)) *@
@*                 return; *@
@* *@
@*             var authState = await AuthStateProvider.GetAuthenticationStateAsync(); *@
@*             var user = authState.User; *@
@*             if (user.Identity?.IsAuthenticated == true) *@
@*             { *@
@*                 var appUser = await UserManager.GetUserAsync(user); *@
@*                 if (appUser?.MustChangePassword == true) *@
@*                 { *@
@*                     Navigation.NavigateTo("/change-password?force=true", forceLoad: true); *@
@*                 } *@
@*             } *@
@*         } *@
@*         _hasCheckedMustChange = true; *@
@*     } *@
@* } *@